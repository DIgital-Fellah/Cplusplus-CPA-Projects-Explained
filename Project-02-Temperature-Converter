#include <iostream>
#include <iomanip>
#include <limits>

// Function declarations
double celsiusToFahrenheit(double celsius);
double celsiusToKelvin(double celsius);
double fahrenheitToCelsius(double fahrenheit);
double fahrenheitToKelvin(double fahrenheit);
double kelvinToCelsius(double kelvin);
double kelvinToFahrenheit(double kelvin);
void clearInputBuffer();

int main() {
    int choice;
    double temperature;

    // Main program loop
    while (true) {
        // Display menu options
        std::cout << "\nTemperature Converter\n";
        std::cout << "1. Celsius to Fahrenheit\n";
        std::cout << "2. Celsius to Kelvin\n";
        std::cout << "3. Fahrenheit to Celsius\n";
        std::cout << "4. Fahrenheit to Kelvin\n";
        std::cout << "5. Kelvin to Celsius\n";
        std::cout << "6. Kelvin to Fahrenheit\n";
        std::cout << "0. Exit\n";
        std::cout << "Enter your choice: ";
        
        // Get user's choice
        std::cin >> choice;

        // Check if input is valid
        if (std::cin.fail()) {
            std::cout << "Invalid input. Please enter a number.\n";
            clearInputBuffer();
            continue;
        }

        // Exit if user chooses 0
        if (choice == 0) {
            std::cout << "Thank you for using the Temperature Converter. Goodbye!\n";
            break;
        }

        // Process user's choice
        if (choice >= 1 && choice <= 6) {
            std::cout << "Enter the temperature: ";
            std::cin >> temperature;

            // Check if input is valid
            if (std::cin.fail()) {
                std::cout << "Invalid input. Please enter a number.\n";
                clearInputBuffer();
                continue;
            }

            // Set output to display 2 decimal places
            std::cout << std::fixed << std::setprecision(2);

            // Perform conversion based on user's choice
            switch (choice) {
                case 1:
                    std::cout << temperature << " Celsius is " << celsiusToFahrenheit(temperature) << " Fahrenheit\n";
                    break;
                case 2:
                    std::cout << temperature << " Celsius is " << celsiusToKelvin(temperature) << " Kelvin\n";
                    break;
                case 3:
                    std::cout << temperature << " Fahrenheit is " << fahrenheitToCelsius(temperature) << " Celsius\n";
                    break;
                case 4:
                    std::cout << temperature << " Fahrenheit is " << fahrenheitToKelvin(temperature) << " Kelvin\n";
                    break;
                case 5:
                    std::cout << temperature << " Kelvin is " << kelvinToCelsius(temperature) << " Celsius\n";
                    break;
                case 6:
                    std::cout << temperature << " Kelvin is " << kelvinToFahrenheit(temperature) << " Fahrenheit\n";
                    break;
            }
        } else {
            std::cout << "Invalid choice. Please enter a number between 0 and 6.\n";
        }
    }

    return 0;
}

// Function to convert Celsius to Fahrenheit
double celsiusToFahrenheit(double celsius) {
    return (celsius * 9.0 / 5.0) + 32.0;
}

// Function to convert Celsius to Kelvin
double celsiusToKelvin(double celsius) {
    return celsius + 273.15;
}

// Function to convert Fahrenheit to Celsius
double fahrenheitToCelsius(double fahrenheit) {
    return (fahrenheit - 32.0) * 5.0 / 9.0;
}

// Function to convert Fahrenheit to Kelvin
double fahrenheitToKelvin(double fahrenheit) {
    return celsiusToKelvin(fahrenheitToCelsius(fahrenheit));
}

// Function to convert Kelvin to Celsius
double kelvinToCelsius(double kelvin) {
    return kelvin - 273.15;
}

// Function to convert Kelvin to Fahrenheit
double kelvinToFahrenheit(double kelvin) {
    return celsiusToFahrenheit(kelvinToCelsius(kelvin));
}

// Function to clear the input buffer
void clearInputBuffer() {
    std::cin.clear();
    std::cin.ignore(std::numeric_limits<std::streamsize>::max(), '\n');
}

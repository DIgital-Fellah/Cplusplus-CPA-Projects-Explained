#include <iostream>
#include <cstdlib>
#include <ctime>

// Function to get a valid guess from the user
int getValidGuess(int min, int max) {
    int guess;
    while (true) {
        std::cout << "Enter your guess (" << min << "-" << max << "): ";
        std::cin >> guess;
        
        // Check if the input was valid
        if (std::cin.fail()) {
            std::cin.clear(); // Clear the error flag
            std::cin.ignore(10000, '\n'); // Discard invalid input
            std::cout << "Invalid input. Please enter a number.\n";
        } else if (guess < min || guess > max) {
            std::cout << "Your guess is out of range. Try again.\n";
        } else {
            return guess;
        }
    }
}

int main() {
    // Seed the random number generator with the current time
    std::srand(static_cast<unsigned int>(std::time(nullptr)));
    
    // Set the range for the random number
    const int MIN_NUMBER = 1;
    const int MAX_NUMBER = 100;
    
    // Generate a random number between MIN_NUMBER and MAX_NUMBER
    int secretNumber = std::rand() % (MAX_NUMBER - MIN_NUMBER + 1) + MIN_NUMBER;
    
    int numberOfGuesses = 0;
    int userGuess;
    
    std::cout << "Welcome to the Number Guessing Game!\n";
    std::cout << "I'm thinking of a number between " << MIN_NUMBER << " and " << MAX_NUMBER << ".\n";
    
    // Main game loop
    do {
        // Get a valid guess from the user
        userGuess = getValidGuess(MIN_NUMBER, MAX_NUMBER);
        numberOfGuesses++;
        
        // Check if the guess is correct
        if (userGuess == secretNumber) {
            std::cout << "Congratulations! You guessed the number in " << numberOfGuesses << " tries!\n";
        } else if (userGuess < secretNumber) {
            std::cout << "Too low! Try again.\n";
        } else {
            std::cout << "Too high! Try again.\n";
        }
        
    } while (userGuess != secretNumber);
    
    return 0;
}
